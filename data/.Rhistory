setwd("/Users/alorozco22/OneDrive - Universidad de los Andes/Documentos 2021-20/2021 08 30 EdCo Curso Contraloría ML Fayber/repo-comercio/data")
setwd("/Users/alorozco22/OneDrive - Universidad de los Andes/Documentos 2021-20/2021 08 30 EdCo Curso Contraloría ML Fayber/repo-comercio/data")
audi <- read.csv(file="audi.csv")
View(audi)
crimen <- read.delim(file="uscrime.txt")
View(crimen)
colnames(crimen) <- c("hombres", "sur", "educ", "gasto60", "gasto59", "fuerzaLabo", "hombresPor100Mujeres", "Poblacion", "No blancos", "Desempleo14a24", "Desempleo35a39", "riqueza", "desigualdad", "encarcelamiento", "mesesPrision", "crimen")
View(crimen)
table(factor(audi$fuelType))
audi$gasolina <- ifelse(audi$fuelType=="Petrol", 1, 0)
table(audi$gasolina)
View(audi)
audi$engineSizeN <- (audi$engineSize - min(audi$engineSize))/(max(audi$engineSize)- min(audi$engineSize))
audi$priceN <- (audi$price - min(audi$price))/(max(audi$price)- min(audi$price))
set.seed(222) # Semilla para replicar proceso aleatorio
nrow(audi)
ind <- sample(2, nrow(audi), replace = TRUE, prob = c(0.7, 0.3))
head(ind)
trainingAudi <- audi[ind==1,]
testingAudi <- audi[ind==2,]
View(trainingAudi)
View(testingAudi)
corrgram(audi, lower.panel=panel.shade, upper.panel=panel.cor)
install.packages("corrgram")
library("corrgram")
corrgram(audi, lower.panel=panel.shade, upper.panel=panel.cor)
modeloLinealCarros <- lm(price~mpg+engineSize+tax+mileage+year, trainingAudi)
summary(modeloLinealCarros)
prediccionesTest <- predict(modeloLinealCarros, testingAudi)
prediccionesTest
prediccionesTest
head(prediccionesTest)
evalLinealAudi <- cbind(testingAudi$price, prediccionesTest)
colnames(evalLinealAudi) <- c('Real', 'Predicho')
evalLinealAudi <- as.data.frame(evalLinealAudi)
View(evalLinealAudi)
errorPromedio <- mean((evalLinealAudi$Real - evalLinealAudi$Predicho))
errorPromedio
errorPromedio2 <- mean((evalLinealAudi$Real - evalLinealAudi$Predicho)*(evalLinealAudi$Real - evalLinealAudi$Predicho))
errorPromedio2
modeloLogistico <- glm(gasolina~engineSize+price, data =  trainingAudi, family = "binomial")
summary(modeloLogistico)
prediccionesTest <- predict(modeloLogistico, newdata = testingAudi, type = "response")
evalLogitAudi <- cbind(testingAudi$gasolina, prediccionesTest)
colnames(evalLogitAudi) <- c('Real', 'Predicho')
evalLogitAudi <- as.data.frame(evalLogitAudi)
View(evalLogitAudi)
evalLogitAudi$GasPredicha <- ifelse(evalLogitAudi$Predicho > 0.5, 1, 0)
matriz <- table(evalLogitAudi$GasPredicha, evalLogitAudi$Real)
matriz
(433+400)/(1298+433+400+1050)
error <- 1-sum(diag(matriz))/sum(matriz)
error
install.packages("class")
library("class")
View(tainingAudi)
View(trainingAudi)
trainingAudiKNN <- as.data.frame(cbind(trainingAudi$engineSizeN, trainingAudi$priceN))
testingAudiKNN <- as.data.frame(cbind(testingAudi$engineSizeN, testingAudi$priceN))
colnames(trainingAudiKNN) <- c('engineSizeN', 'priceN')
colnames(testingAudiKNN) <- c('engineSizeN', 'priceN')
View(trainingAudiKNN)
prediccionesKVecinos <- knn(trainingAudiKNN,testingAudiKNN,cl=trainingAudi$gasolina,k=5)
evalKNNAudi <- as.data.frame(cbind(testingAudi$gasolina,prediccionesKVecinos))
colnames(evalKNNAudi) <- c('Real', 'Predicho')
View(evalKNNAudi)
View(evalKNNAudi)
table(evalKNNAudi$Predicho)
evalKNNAudi$Predicho <- ifelse(evalKNNAudi$Predicho == 1, 0, 2)
evalKNNAudi$Predicho <- ifelse(evalKNNAudi$Predicho == 2, 1, 0)
table(evalKNNAudi$Predicho)
matriz <- table(evalKNNAudi$Predicho,evalKNNAudi$Real)
matriz
error <- 1-sum(diag(matriz))/sum(matriz)
error
install.packages("tree")
library("tree")
trainingAudiArbol <- as.data.frame(cbind(trainingAudi$engineSize, trainingAudi$price, trainingAudi$gasolina))
testingAudiArbol <- as.data.frame(cbind(testingAudi$engineSize, testingAudi$price, testingAudi$gasolina))
colnames(trainingAudiArbol) <- c('engineSize', 'price', 'gasolina')
colnames(testingAudiArbol) <- c('engineSize', 'price', 'gasolina')
View(trainingAudiArbol)
arbol <- tree(as.factor(gasolina)~., data=trainingAudiArbol)
summary(arbol)
plot(arbol)
text(arbol, cex=0.5)
prediccionesArbol <- predict(arbol, testingAudiArbol, type="class")
head(prediccionesArbol)
evalArbolAudi <- as.data.frame(testingAudi$gasolina)
evalArbolAudi$Predicho <- prediccionesArbol
colnames(evalArbolAudi) <- c('Real', 'Predicho')
View(evalArbolAudi)
matriz <- table(evalArbolAudi$Predicho,evalArbolAudi$Real)
matriz
error <- 1-sum(diag(matriz))/sum(matriz)
error
View(crimen)
?prcomp
componentes <- prcomp(crimen, scale = TRUE)
componentes$rotation <- -1*componentes$rotation
componentes$rotation
componentes$x <- -1*componentes$x
head(componentes$x)
biplot(componentes, scale = 0, cex=0.5)
componentes$sdev^2 / sum(componentes$sdev^2)
0.3888874592+0.1830000080
